{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\n\nfunction LoginComponent_div_7_div_1_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const validation_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", validation_r3.message, \" \");\n  }\n}\n\nfunction LoginComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_7_div_1_label_1_Template, 2, 1, \"label\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const validation_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"email\"].hasError(validation_r3.type));\n  }\n}\n\nfunction LoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_7_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.validationMessages.email);\n  }\n}\n\nfunction LoginComponent_div_12_div_1_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const validation_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", validation_r7.message, \" \");\n  }\n}\n\nfunction LoginComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_12_div_1_label_1_Template, 2, 1, \"label\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const validation_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f[\"password\"].hasError(validation_r7.type));\n  }\n}\n\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_12_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.validationMessages.password);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, router, http) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.http = http;\n      this.formValid = false;\n      this.usuario = \"camilo425@gmail.com\";\n      this.password = \"12345678\";\n      this.validationMessages = {\n        email: [{\n          type: 'required',\n          message: 'Este campo es requerido'\n        }, {\n          type: 'pattern',\n          message: 'Solo se permiten emails'\n        }],\n        password: [{\n          type: 'required',\n          message: 'Este campo es requerido'\n        }, {\n          type: 'minlength',\n          message: 'Este campo debe tener minimo 8 caracteres'\n        }]\n      };\n    }\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        email: ['', [Validators.required, Validators.email, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\n        password: ['', [Validators.required, Validators.minLength(8)]]\n      });\n    }\n\n    get f() {\n      return this.loginForm.controls;\n    }\n\n    login() {\n      if (this.loginForm.valid) {\n        var email = this.loginForm.controls['email'].value;\n        var password = this.loginForm.controls['password'].value; //Mockup de servicio de login\n\n        this.http.get('https://moradatest.free.beeceptor.com/login').subscribe(data => {\n          if (data) {\n            localStorage.setItem('token', data.token);\n            localStorage.setItem('expiration', data.expiration);\n            this.router.navigate(['default/home']);\n            return;\n          }\n\n          this.fireSuccessSwal('Error', email + ' No es un usuario autorizado', 'error', 'bad');\n          return;\n        });\n      } else {\n        this.fireSuccessSwal('Error', 'login fallido verifique los campos', 'error', 'bad');\n      }\n    }\n\n    fireSuccessSwal(title, text, icon, confirmButton) {\n      switch (icon) {\n        case 'success':\n          Swal.fire({\n            title: title,\n            text: text,\n            icon: 'success',\n            confirmButtonText: confirmButton\n          });\n          break;\n\n        case 'error':\n          Swal.fire({\n            title: title,\n            text: text,\n            icon: 'error',\n            confirmButtonText: confirmButton\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 4,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"card\", \"p-5\"], [3, \"formGroup\"], [1, \"form-outline\", \"mb-4\"], [\"type\", \"email\", \"id\", \"form2Example1\", \"required\", \"\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"form2Example1\", 1, \"form-label\"], [4, \"ngIf\"], [\"type\", \"password\", \"id\", \"form2Example2\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"form2Example2\", 1, \"form-label\"], [1, \"row\", \"mb-4\"], [1, \"col\", \"d-flex\", \"justify-content-center\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"form2Example31\", \"checked\", \"\", 1, \"form-check-input\"], [\"for\", \"form2Example31\", 1, \"form-check-label\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\", 3, \"disabled\", \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"input\", 4);\n        i0.ɵɵelementStart(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, LoginComponent_div_7_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵelementStart(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9)(14, \"div\", 10)(15, \"div\", 11);\n        i0.ɵɵelement(16, \"input\", 12);\n        i0.ɵɵelementStart(17, \"label\", 13);\n        i0.ɵɵtext(18, \" Recuerdame \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(19, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(20, \"Login\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"email\"].touched || ctx.f[\"email\"].dirty);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"password\"].touched || ctx.f[\"password\"].dirty);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    }\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}